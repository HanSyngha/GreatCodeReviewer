@startuml
class File {
-inFile_ : fstream
-outFile_ : fstream 
-inFileName_ : string
-outFileName_ : string
+OpenFile(string, string) bool 
+ReadLine(void) : string 
+WriteLine(string) : void 
+CloseFile(void) : void 
+IsValidFiles(void) : bool
}

class Parser {
-employeemanager : EmployeeManager
+equest_management(const vector<string>) : string 
+request_del(const vector<string>)  : string
+request_search(const vector<string>)  : string
+request_mod(const vector<string>)  : string
+make_return_str(const map<int, Employee>, string, bool)  : string
+parse(const string) : string
+request_add(const vector<string>) : void
}

class EmployeeManager {
-m_Employees : map<int, Employee>
-m_Results : map<int, Employee>
-clearResults() : void
+GetEmployeeSize(void) : int 
+Add(const Employee& employee) : void
+Modify(Employee& employee, string, string) : void 
+ModifyWithNoOption(sting, string, string, string) : map<int, Employee> 
+ModifyByFirstName(sting, string, string, string) : map<int, Employee> 
+ModifyByLastName(sting, string, string, string) : map<int, Employee> 
+ModifyByPhoneMidNumber(sting, string, string, string) : map<int, Employee> 
+ModifyByPhoneLastNumber(sting, string, string, string) : map<int, Employee>  
+ModifyByBirthYear(sting, string, string, string) : map<int, Employee> 
+ModifyByBirthMonth(sting, string, string, string)  : map<int, Employee> 
+ModifyByBirthDay(sting, string, string, string) : map<int, Employee> 
+DeleteWithNoOption(sting, string) : map<int, Employee> 
+DeleteByFirstName(sting, string) : map<int, Employee> 
+DeleteByLastName(sting, string) : map<int, Employee> 
+DeleteByPhoneMidNumber(sting, string) : map<int, Employee> 
+DleteByPhoneLastNumber(sting, string) : map<int, Employee> 
+DeleteByBirthYear(sting, string) : map<int, Employee> 
+DeleteByBirthMonth(sting, string) : map<int, Employee> 
+DeleteByBirthDay(sting, string) : map<int, Employee> 
+SearchWithNoOption(sting, string) : map<int, Employee> 
+SearchByFirstName(sting, string) : map<int, Employee> 
+SearchByLastName(sting, string) : map<int, Employee> 
+SearchByPhoneMidNumber(sting, string) : map<int, Employee> 
+SearchByPhoneLastNumber(sting, string) : map<int, Employee> 
+SearchByBirthYear(sting, string) : map<int, Employee> 
+SearchByBirthMonth(sting, string) : map<int, Employee> 
+SearchByBirthDay(sting, string) : map<int, Employee> 
}

entity Employee {
+EmpNo : string 
+Name : string 
+Career_level : string 
+Phone_number : string 
+BirthDay : string 
+Certi : string 
{static}makeKeyValueFromString(const string&) : int
}
circle main
main --> File : <<use>>
main --> Parser : <<use>>
Parser --> EmployeeManager : <<use>>
EmployeeManager o-- Employee
Parser --> Employee : <<use>>

@enduml